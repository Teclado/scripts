#!/bin/bash
#################################################################################
##                                                                             ##
##    Copyright (C) 2012 Free Software Foundation, Inc. <http://fsf.org/>      ##
##                                                                             ##
##    This program is free software: you can redistribute it and/or modify     ##
##    it under the terms of the GNU General Public License as published by     ##
##    the Free Software Foundation, either version 3 of the License, or        ##
##    (at your option) any later version.                                      ##
##                                                                             ##
##    This program is distributed in the hope that it will be useful,          ##
##    but WITHOUT ANY WARRANTY; without even the implied warranty of           ##
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            ##
##    GNU General Public License for more details.                             ##
##                                                                             ##
##    You should have received a copy of the GNU General Public License        ##
##    along with this program.  If not, see <http://www.gnu.org/licenses/>.    ##
##                                                                             ##
#################################################################################

#################################################################################
##                                                                             ##
##          Author: Teclado @ GitHub                                           ##
##           Email: mugre_en_el_teclado@yahoo.es                               ##
##            Date: 2013/09/28                                                 ##
##     Description: Maintain a numbered backup based on timestamps of a        ##
##                  remote directory (typically a USB drive) into a local      ##
##                  directory or vice versa.                                   ##
##           Usage: bkdir <remote directory> <local (backup) directory>        ##
##                                                                             ##
#################################################################################
    
if [ $# -eq 2 ]; then
	rdir=$1
	ldir=$2
else
# Set default values
	rdir=
	ldir=
fi

[ -d "$ldir" ] && [ -d "$rdir" ] || exit

function place () {
# Places remote file according to timestamps.
# Usage: place <remote file> <local file>
	[ ! -d "$1" ] && [ ! -d "$2" ] || return
	d[0]=$2
	let n=0
	while [ -e "${d[$n]}" ]; do
		let n+=1
		d[$n]=$2.$n
	done
	if [ -e "$1" ]; then
		let m=0
		while [ -e "${d[$m]}" ] && [ "${d[$m]}" -nt "$1" ]; do
			let m+=1
		done
		if [ ! -e "${d[$m]}" ] || [ "$1" -nt "${d[$m]}" ]; then
			while [ $n -gt $m ]; do
				mv "${d[$((n-1))]}" "${d[$n]}"
				let n-=1
			done
			if [ $m -eq 0 ]; then
				copy "$1" "${d[0]}"
			else
				move "$1" "${d[$m]}"
				copy "${d[0]}" "$1"
			fi
		fi
	elif [ $n -gt 0 ]; then
		copy "${d[0]}" "$1"
	fi
}

function copy () {
# More suitable than cp in this case
	ddir=$(dirname "$2")
	if [ -d "$ddir" ]; then
		cp --preserve=timestamps "$1" "$2"
	else
		d=$ddir
		while [ ! -e "$d" ]; do
			d=$(dirname "$d")
		done
		if [ ! -d "$d" ]; then
			mv "$d" "${d%/*}/file_${d##*/}"
		fi
		mkdir -p "$ddir"
		cp --preserve=timestamps "$1" "$2"
	fi
}

function move () {
# More suitable than mv in this case
	ddir=$(dirname "$2")
	if [ -d "$ddir" ]; then
		mv "$1" "$2"
	else
		d=$ddir
		while [ ! -e "$d" ]; do
			d=$(dirname "$d")
		done
		if [ ! -d "$d" ]; then
			mv "$d" "${d%/*}/file_${d##*/}"
		fi
		mkdir -p "$ddir"
		mv "$1" "$2"
	fi
}

find "$rdir" -type f | while read rf; do
	lf=$ldir${rf#$rdir}
	place "$rf" "$lf"
done

find "$ldir" -type f | while read lf; do
	if ! let "${lf##*.}" 2>/dev/null; then
		rf=$rdir${lf#$ldir}
		place "$rf" "$lf"
	fi
done


